[build-system]
requires = ["setuptools>=64.0.0", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "solrbenchmark"
description = "Python package for benchmarking Solr instances: generating and loading fake but realistic data, running tests, and logging results."
readme = "README.md"
authors = [{name = "Jason Thomale", email = "jason.thomale@unt.edu"}]
keywords = ["Solr", "testing", "benchmarking", "data"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development",
    "Topic :: Software Development :: Testing",
]
dynamic = ["version"]
requires-python = ">=3.7"
dependencies = [
    'fauxdoc >= 1.0.0',
    'ujson >= 4.2.0; python_version >= "3.10"',
    'ujson >= 4.0.0; python_version == "3.9"',
    'ujson >= 2.0.0; python_version <= "3.8"',
    # For Python >=3.8 we use importlib.metadata to get the installed
    # package version so we can use pyproject.toml as the single source
    # of truth for the version number. This was new in 3.8, so for 3.7
    # we have to use importlib_metadata.
    'importlib_metadata >= 2.0.0; python_version == "3.7"',
    # For Python 3.7 we need typing_extensions for Protocol support,
    # which was added to the typing stdlib in 3.8.
    'typing_extensions >= 3.6.5; python_version == "3.7"'
]

[project.optional-dependencies]
dev = [
    'pytest >= 6.2.4; python_version >= "3.10"',
    'pytest >= 3.0.0; python_version < "3.10"',
    'pysolr >= 3.9.0',
    'python-dotenv >= 0.19.1; python_version >= "3.10"',
    'python-dotenv >= 0.15.0; python_version == "3.9"',
    'python-dotenv >= 0.11.0; python_version == "3.8"',
    'python-dotenv >= 0.10.3; python_version == "3.7"'
]

[tool.setuptools_scm]
local_scheme = "no-local-version"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = flake8,pylint_critical,mypy_strict,py{37,38,39,310,311}-{oldest,latest}
isolated_build = True

[testenv]
extras =
    dev
commands =
    pytest --ignore=tests/integration

[testenv:py37-oldest]
deps =
    fauxdoc==1.0.0
    ujson==2.0.0
    importlib_metadata==2.0.0
    pytest==3.0.0
    pysolr==3.9.0
    python-dotenv==0.10.3

[testenv:py38-oldest]
deps =
    fauxdoc==1.0.0
    ujson==2.0.0
    pytest==3.0.0
    pysolr==3.9.0
    python-dotenv==0.11.0

[testenv:py39-oldest]
deps =
    fauxdoc==1.0.0
    ujson==4.0.0
    pytest==3.0.0
    pysolr==3.9.0
    python-dotenv==0.15.0

[testenv:py{310,311}-oldest]
deps =
    fauxdoc==1.0.0
    ujson==4.2.0
    pytest==6.2.4
    pysolr==3.9.0
    python-dotenv==0.19.1

[testenv:py{37,38,39,310,311}-integration]
commands =
    pytest -k integration

[testenv:flake8]
basepython=python3.10
skip_install = true
deps =
    flake8
commands =
    flake8 src/solrbenchmark tests --exclude=__pycache__

[testenv:pylint_critical]
basepython=python3.10
deps =
    pylint
commands =
    pylint solrbenchmark tests --errors-only --ignore=__pycache__

[testenv:pylint_all]
basepython=python3.10
deps =
    pylint
commands =
    pylint solrbenchmark tests --ignore=__pycache__ --good-names=_,i,mn,mx,em

[testenv:mypy_strict]
basepython=python3.10
deps =
    mypy
    types-ujson
commands =
    mypy src/solrbenchmark --strict --ignore-missing-imports --allow-subclassing-any --no-warn-return-any

[testenv:build_package]
basepython = python3.10
skip_install = true
deps =
    build
    twine
allowlist_externals =
    bash
commands =
    bash -c 'rm -rf dist'
    python -m build
    bash -c 'python -m twine check dist/*.whl'
    bash -c 'python -m twine check dist/*.gz'

[testenv:py{37,38,39,310,311}-test_built_package]
skip_install = true
deps =
    pytest
allowlist_externals =
    bash
commands =
    bash -c 'python -m pip install {posargs:dist/*.whl}'
    pytest --ignore=tests/integration
"""
